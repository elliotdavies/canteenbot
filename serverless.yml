## Serverless config
## https://serverless.com/framework/docs

## Name for overall service (collection of functions)
service: canteenbot

## AWS details
provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  profile: ${file(env.yml):profile}
  stage: ${file(env.yml):stage}

  ## Service-wide environment variables
  environment:
    CORE_URL: ${file(env.yml):CORE_URL}
    CLIENT_ID: ${file(env.yml):CLIENT_ID}
    CLIENT_SECRET: ${file(env.yml):CLIENT_SECRET}
    REDIRECT_URI: ${file(env.yml):REDIRECT_URI}

## Individual parts of the service
functions:
  ## CanteenBot's core
  # core:
  #   handler: core/handler.handler
  #   events:
  #     - http:
  #         path: /core
  #         method: get
  #   environment:
  #     DATA_URL: https://canteenbot-data.s3-eu-west-2.amazonaws.com/

  ## Slash-command listener
  slack:
    handler: slack/handler.handler
    events:
      - http:
          method: get
          path: /slack
      - http:
          method: post
          path: /slack
      ## Post to Slack on a schedule
      - schedule:
          rate: cron(0 11 * * ? *)
          input:
            notify: true

  ## Alexa skill
  alexa:
    handler: alexa/handler.handler
    events:
      - alexaSkill

  ## Menu scraper
  # scraper:
  #   handler: scraper/handler.handler
  #   events:
  #     - schedule: cron(0 * * * ? *)

## Bundling options
package:
  # individually: true
  exclude:
    - assets/**
    - data/**
    - package.json
    - .gitignore
    - README.md
  # include:
  #   lib/**


## Examples of event types
# events:
#   - http:
#     path: users/create
#     method: get
#   - s3: ${env:BUCKET}
#   - schedule: rate(10 minutes)
#   - sns: greeter-topic
#   - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#   - alexaSkill
#   - iot:
#     sql: "SELECT * FROM 'some_topic'"

## Examples of adding CloudFormation resource templates
# resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
